name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.2.app
    
    - name: Build
      run: swift build -v
    
    - name: Run tests
      run: swift test -v
    
  gates:
    runs-on: macos-14
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Release
      run: swift build -c release
    
    - name: Run Performance Gates
      run: |
        .build/release/AutoResolveUI --verify-gates > gates.json
        python3 scripts/check_gates.py gates.json
    
    - name: Upload Gate Results
      uses: actions/upload-artifact@v3
      with:
        name: gate-results
        path: gates.json
    
  proof:
    runs-on: macos-14
    needs: gates
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Generate Proof Pack
      run: |
        swift build -c release
        .build/release/AutoResolveUI --generate-proof > proof.json
    
    - name: Upload Proof
      uses: actions/upload-artifact@v3
      with:
        name: proof-pack
        path: proof.json
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const proof = JSON.parse(fs.readFileSync('proof.json', 'utf8'));
          
          const comment = `## Performance Gates ✅
          
          | Metric | Value | Gate | Status |
          |--------|-------|------|--------|
          | UI Memory | ${proof.ui_memory_mb} MB | ≤200 MB | ${proof.ui_memory_mb <= 200 ? '✅' : '❌'} |
          | Timeline FPS | ${proof.timeline_fps} | ≥60 | ${proof.timeline_fps >= 60 ? '✅' : '❌'} |
          | Blade Time | ${proof.blade_ms} ms | ≤16 ms | ${proof.blade_ms <= 16 ? '✅' : '❌'} |
          | Startup Time | ${proof.startup_ms} ms | ≤500 ms | ${proof.startup_ms <= 500 ? '✅' : '❌'} |
          
          Full proof: [Download](${context.payload.pull_request.html_url}/files#proof-pack)`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });